
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: 'shaman-keypair'

Resources: 

  SecurityGroupPublic:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'

  EC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: 't2.micro'
      ImageId: 'ami-00c03f7f7f2ec15c3'
      KeyName: !Ref 'KeyName'
      SecurityGroupIds: [!Ref 'SecurityGroupPublic']
      IamInstanceProfile: !Ref RootInstanceProfile
      UserData: !Base64
          'Fn::Join':
            - ''
            - - |
                #!/bin/bash -xe
              - |
                aws s3api get-object --bucket kto-bucket --key sns_publish.sh sns_publish.sh
                aws s3api get-object --bucket kto-bucket --key sqs_rw_queue.sh sqs_rw_queue.sh
  
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties: {}

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: "ktotok@lohika.com"
          Protocol: "email"
      TopicName: "EmailNotificationTopic"
  
  SNSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: MyTopicPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: My-statement-id
          Effect: Allow
          Principal:
            AWS: !GetAtt RoleTopicPublisher.Arn
          Action: sns:Publish
          Resource: "*"
      Topics:
      - !Ref SNSTopic
  
  SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: MyQueuePolicy
        Version: '2012-10-17'
        Statement:
        - Sid: Allow-Role-SendMessage
          Effect: Allow
          Principal:
            AWS: !GetAtt RoleTopicPublisher.Arn
          Action: 
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource: "*"
      Queues: 
      - !Ref SQSQueue
            
  S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3-access-policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: '*'
      Roles:
        - !Ref RoleTopicPublisher

  RoleTopicPublisher:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: ec2.amazonaws.com
              Action: sts:AssumeRole
        Path: /

  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref RoleTopicPublisher

Outputs:
  EC2Instance:
    Description: Public IP EC2Instance
    Value: !GetAtt [EC2, PublicIp]
  
  SNSTopicTopicARN:
    Value: !Ref SNSTopic
    Description: Topic ARN of newly created SNS topic  

  SQSQueueURL:
    Value: !Ref SQSQueue
    Description: SQSQueue details
